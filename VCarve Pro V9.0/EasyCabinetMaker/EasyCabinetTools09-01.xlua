-- ====================================================]]
function Mill_Math()  --  All the math for Milling
  Cab.Wpt1     = Point2D(1, 1)   --  Left Side Panel
  Cab.Wpt2     = Point2D(20, 1)  --  Right Side Panel
  Cab.Wpt3     = Point2D(40, 1)  --  Base_CabinetShelf
  Cab.Wpt4     = Point2D(14, 1)  --  Base_CenterPanel
  Cab.Wpt5     = Point2D(14, 34) --  Wall_CabinetShelf
  Cab.Wpt6     = Point2D(30, 1)  --  Base_CabinetBottom
  Cab.Wpt7     = Point2D(30, 1)  --  Wall_CenterPanel
  Cab.Wpt8     = Point2D(45, 1)  --  No Call = Polar2D(Cab.Wpt5, 0.0, WallDim.CabLength + Milling.PartGap) --  Shelf
  Cab.Wpt9     = Cab.Wpt1        --  Stretcher Parts
  Cab.Wpt10    = Cab.Wpt1        --  Stretcher Parts
  Milling.Tabs = false           --  User to setup Tabs
  Milling.ShelfPinRadius    = Milling.ShelfPinDiameter * 0.500
  Milling.ProfileToolRadius = Milling.ProfileToolDia * 0.500
  Milling.PocketToolRadius  = Milling.PocketToolDia * 0.500
  Project.DrawerID  = StartDate()
  return true
end
-- ====================================================]]
function RegistryRead()  --  Read from Registry values
  local RegistryRead                        = Registry(RegName)
  BaseDim.CabDepth                          = RegistryRead:GetDouble("BaseDim.CabDepth", 23.0000)
  BaseDim.CabHeight                         = RegistryRead:GetDouble("BaseDim.CabHeight", 35.500)
  BaseDim.CabLength                         = RegistryRead:GetDouble("BaseDim.CabLength", 36.0000)
  BaseDim.FaceFrameBottomRailWidth          = RegistryRead:GetDouble("BaseDim.FaceFrameBottomRailWidth", 1.5000)
  BaseDim.FaceFrameBottomReveal             = RegistryRead:GetDouble("BaseDim.FaceFrameBottomReveal", 0.0625)
  BaseDim.FaceFrameCenterStileWidth         = RegistryRead:GetDouble("BaseDim.FaceFrameCenterStileWidth", 1.7500)
  BaseDim.FaceFrameDrawerHeight1            = RegistryRead:GetDouble("BaseDim.FaceFrameDrawerHeight1", 5.0000)
  BaseDim.FaceFrameDrawerHeight2            = RegistryRead:GetDouble("BaseDim.FaceFrameDrawerHeight2", 6.0000)
  BaseDim.FaceFrameDrawerHeight3            = RegistryRead:GetDouble("BaseDim.FaceFrameDrawerHeight3", 6.0000)
  BaseDim.FaceFrameMidRailWidth             = RegistryRead:GetDouble("BaseDim.FaceFrameMidRailWidth", 1.5000)
  BaseDim.FaceFrameSideReveal               = RegistryRead:GetDouble("BaseDim.FaceFrameSideReveal", 0.2500)
  BaseDim.FaceFrameStileWidth               = RegistryRead:GetDouble("BaseDim.FaceFrameStileWidth", 2.2500)
  BaseDim.FaceFrameThickness                = RegistryRead:GetDouble("BaseDim.FaceFrameThickness", 0.7500)
  BaseDim.FaceFrameTopOverlap               = RegistryRead:GetDouble("BaseDim.FaceFrameTopOverlap", 0.7500)
  BaseDim.FaceFrameTopRailWidth             = RegistryRead:GetDouble("BaseDim.FaceFrameTopRailWidth", 1.7500)
  BaseDim.MaterialThickness                 = RegistryRead:GetDouble("BaseDim.MaterialThickness", 0.750)
  BaseDim.ShelfEndClarence                  = RegistryRead:GetDouble("BaseDim.ShelfEndClarence", 0.1800)
  BaseDim.ShelfFaceFrameThickness           = RegistryRead:GetDouble("BaseDim.ShelfFaceFrameThickness", 0.750)
  BaseDim.ShelfFaceFrameWidth               = RegistryRead:GetDouble("BaseDim.ShelfFaceFrameWidth", 1.2500)
  BaseDim.ShelfFrontClearance               = RegistryRead:GetDouble("BaseDim.ShelfFrontClearance", 0.2500)
  BaseDim.ShelfHoleFirstRowSpacing          = RegistryRead:GetDouble("BaseDim.ShelfHoleFirstRowSpacing", 4.00)
  BaseDim.ShelfHoleLastRowSpacing           = RegistryRead:GetDouble("BaseDim.ShelfHoleLastRowSpacing", 3.000)
  BaseDim.ShelfHoleSpacing                  = RegistryRead:GetDouble("BaseDim.ShelfHoleSpacing", 2.000)
  BaseDim.ShelfMaterialThickness            = RegistryRead:GetDouble("BaseDim.ShelfMaterialThickness", 0.7500)
  BaseDim.ShelfPinHoleBack                  = RegistryRead:GetDouble("BaseDim.ShelfPinHoleBack", 3.0000)
  BaseDim.ShelfPinHoleFront                 = RegistryRead:GetDouble("BaseDim.ShelfPinHoleFront", 2.75)
  BaseDim.StretcherThickness                = RegistryRead:GetDouble("BaseDim.StretcherThickness", 0.50)
  BaseDim.StretcherWidth                    = RegistryRead:GetDouble("BaseDim.StretcherWidth", 3.500)
  BaseDim.ThicknessBack                     = RegistryRead:GetDouble("BaseDim.ThicknessBack", 0.50)
  BaseDim.ToeKickBottomOffsetHeight         = RegistryRead:GetDouble("BaseDim.ToeKickBottomOffsetHeight", 0.500)
  BaseDim.ToeKickCoverHeight                = RegistryRead:GetDouble("BaseDim.ToeKickCoverHeight", 3.6875)
  BaseDim.ToeKickDepth                      = RegistryRead:GetDouble("BaseDim.ToeKickDepth", 3.0000)
  BaseDim.ToeKickHeight                     = RegistryRead:GetDouble("BaseDim.ToeKickHeight", 3.5000)
  BaseDim.TopFrameWidth                     = RegistryRead:GetDouble("BaseDim.TopFrameWidth", 3.7500)
  BaseQuestion.AddCenterFaceFrame           = RegistryRead:GetBool("BaseQuestion.AddCenterFaceFrame", true)
  BaseQuestion.AddCenterPanel               = RegistryRead:GetBool("BaseQuestion.AddCenterPanel", true)
  BaseQuestion.AddStrecherPocket            = RegistryRead:GetBool("BaseQuestion.AddStrecherPocket", true)
  BaseQuestion.DadoStyle                    = RegistryRead:GetString("BaseQuestion.DadoStyle", "Through")
  BaseQuestion.DrawerRowCount               = RegistryRead:GetInt("BaseQuestion.DrawerRowCount", 1)
  BaseQuestion.ShelfCount                   = RegistryRead:GetInt("BaseQuestion.ShelfCount", 2.0000)
  DialogWindow.AboutXY                      = RegistryRead:GetString("DialogWindow.AboutXY", "0")
  DialogWindow.BaseCabinetXY                = RegistryRead:GetString("DialogWindow.BaseCabinetXY", "0")
  DialogWindow.InquiryWallOrBaseXY          = RegistryRead:GetString("DialogWindow.InquiryWallOrBaseXX0", "0")
  DialogWindow.LayerXY                      = RegistryRead:GetString("DialogWindow.LayerXY", "0")
  DialogWindow.MillingXY                    = RegistryRead:GetString("DialogWindow.MillingXY", "0")
  DialogWindow.ProjectXY                    = RegistryRead:GetString("DialogWindow.ProjectSetupXX0", "0")
  DialogWindow.WallCabinetXY                = RegistryRead:GetString("DialogWindow.WallCabinetSetupXX0", "0")
  Milling.DadoBackHeight                    = RegistryRead:GetDouble("Milling.DadoBackHeight", 0.2500)
  Milling.DadoClearance                     = RegistryRead:GetDouble("Milling.DadoClearance", 0.0100)
  Milling.DadoHeight                        = RegistryRead:GetDouble("Milling.DadoHeight", 0.3750)

  Milling.LNBackPocketColor               = RegistryRead:GetString("Milling.LNBackPocketColor",               "Red")
  Milling.LNBackProfileColor              = RegistryRead:GetString("Milling.LNBackProfileColor",              "Black")
  Milling.LNCenterPanelProfileColor       = RegistryRead:GetString("Milling.LNCenterPanelProfileColor",       "Cyan")
  Milling.LNCenterPanelShelfPinDrillColor = RegistryRead:GetString("Milling.LNCenterPanelShelfPinDrillColor", "Black")
  Milling.LNDrawFaceFrameColor            = RegistryRead:GetString("Milling.LNDrawFaceFrameColor",            "Black")
  Milling.LNDrawNotesColor                = RegistryRead:GetString("Milling.LNDrawNotesColor",                "Blue")
  Milling.LNPartLabelsColor               = RegistryRead:GetString("Milling.LNPartLabelsColor",               "Green")
  Milling.LNShelfProfileColor             = RegistryRead:GetString("Milling.LNShelfProfileColor",             "Black")
  Milling.LNSidePocketColor               = RegistryRead:GetString("Milling.LNSidePocketColor",               "Cyan")
  Milling.LNSideProfileColor              = RegistryRead:GetString("Milling.LNSideProfileColor",              "Black")
  Milling.LNSideShelfPinDrillColor        = RegistryRead:GetString("Milling.LNSideShelfPinDrillColor",        "Red")
  Milling.LNStretcherRailProfileColor     = RegistryRead:GetString("Milling.LNStretcherRailProfileColor",     "Black")
  Milling.LNTopBottomPocketColor          = RegistryRead:GetString("Milling.LNTopBottomPocketColor",          "Blue")
  Milling.LNTopBottomProfileColor         = RegistryRead:GetString("Milling.LNTopBottomProfileColor",         "Green")

  Milling.LNBackPocket               = RegistryRead:GetString("Milling.LNBackPocket",               "BackPocketProfile")
  Milling.LNBackProfile              = RegistryRead:GetString("Milling.LNBackProfile",              "BackPanelProfile")
  Milling.LNCenterPanelProfile       = RegistryRead:GetString("Milling.LNCenterPanelProfile",       "CenterPanelProfile")
  Milling.LNCenterPanelShelfPinDrill = RegistryRead:GetString("Milling.LNCenterPanelShelfPinDrill", "PinHoles")
  Milling.LNDrawFaceFrame            = RegistryRead:GetString("Milling.LNDrawFaceFrame",            "FaceFrameProfile")
  Milling.LNDrawNotes                = RegistryRead:GetString("Milling.LNDrawNotes",                "NotesProfile")
  Milling.LNPartLabels               = RegistryRead:GetString("Milling.LNPartLabels",               "PartLabels")
  Milling.LNShelfProfile             = RegistryRead:GetString("Milling.LNShelfProfile",             "ShelfPanelProfile")
  Milling.LNSidePocket               = RegistryRead:GetString("Milling.LNSidePocket",               "SidePanelPocket")
  Milling.LNSideProfile              = RegistryRead:GetString("Milling.LNSideProfile",              "SidePanelProfile")
  Milling.LNSideShelfPinDrill        = RegistryRead:GetString("Milling.LNSideShelfPinDrill",        "DrillShelfPinProfile")
  Milling.LNStretcherRailProfile     = RegistryRead:GetString("Milling.LNStretcherRailProfile",     "StretcherProfile")
  Milling.LNTopBottomPocket          = RegistryRead:GetString("Milling.LNTopBottomPocket",          "TopBottomPocket")
  Milling.LNTopBottomProfile         = RegistryRead:GetString("Milling.LNTopBottomProfile",         "TopBottomPanelProfile")
  Milling.PartGap                           = RegistryRead:GetDouble("Milling.PartGap", 0.5000)
  Milling.PocketToolDia                     = RegistryRead:GetDouble("Milling.PocketToolDia", 0.2500)
  Milling.ProfileToolDia                    = RegistryRead:GetDouble("Milling.ProfileToolDia", 0.2500)
  Milling.ProfileToolRadius                 = RegistryRead:GetDouble("Milling.ProfileToolRadius", 0.1250)
  Milling.RabbitClearance                   = RegistryRead:GetDouble("Milling.RabbitClearance", 0.0500)
  Milling.ShelfPinDiameter                  = RegistryRead:GetDouble("Milling.ShelfPinDiameter", 0.1940)
  Milling.ShelfPinLen                       = RegistryRead:GetDouble("Milling.ShelfPinLen", 0.5000)
  Milling.ShelfPinRadius                    = RegistryRead:GetDouble("Milling.ShelfPinRadius", 0.0970)
  Project.CabinetName                       = RegistryRead:GetString("Project.CabinetName", "Default")
  Project.ProgramCodeBy                     = RegistryRead:GetString("Project.ProgramCodeBy", "James Anderson")
  Project.ProgramName                       = RegistryRead:GetString("Project.ProgramName", "Easy Cabinet Maker")
  Project.ProgramVersion                    = RegistryRead:GetString("Project.ProgramVersion", VerNumber)
  Project.ProgramYear                       = RegistryRead:GetString("Project.ProgramYear", YearNumber)
  Project.ProjectContactEmail               = RegistryRead:GetString("Project.ProjectContactEmail", "Default@Email.com")
  Project.ProjectContactName                = RegistryRead:GetString("Project.ProjectContactName", "Who")
  Project.ProjectContactPhoneNumber         = RegistryRead:GetString("Project.ProjectContactPhoneNumber", "(123)456-7890")
  Project.ProjectName                       = RegistryRead:GetString("Project.ProjectName", "CABINET PROJECTS")
  Project.ProjectPath                       = RegistryRead:GetString("Project.ProjectPath", "Default")
  Project.Drawing                           = RegistryRead:GetString("Project.ProjectPath", "BOTH")
  WallDim.CabDepth                          = RegistryRead:GetDouble("WallDim.CabDepth", 12.0000)
  WallDim.CabHeight                         = RegistryRead:GetDouble("WallDim.CabHeight", 28.000)
  WallDim.CabLength                         = RegistryRead:GetDouble("WallDim.CabLength", 36.000)
  WallDim.FaceFrameBottomRailWidth          = RegistryRead:GetDouble("WallDim.FaceFrameBottomRailWidth", 1.2500)
  WallDim.FaceFrameBottomReveal             = RegistryRead:GetDouble("WallDim.FaceFrameBottomReveal", 0.0625)
  WallDim.FaceFrameCenterStileWidth         = RegistryRead:GetDouble("WallDim.FaceFrameCenterStileWidth", 1.7500)
  WallDim.FaceFrameSideReveal               = RegistryRead:GetDouble("WallDim.FaceFrameSideReveal", 0.0625)
  WallDim.FaceFrameStileWidth               = RegistryRead:GetDouble("WallDim.FaceFrameStileWidth", 2.2500)
  WallDim.FaceFrameThickness                = RegistryRead:GetDouble("WallDim.FaceFrameThickness", 0.7500)
  WallDim.FaceFrameTopOverlap               = RegistryRead:GetDouble("WallDim.FaceFrameTopOverlap", 0.7500)
  WallDim.FaceFrameTopRailWidth             = RegistryRead:GetDouble("WallDim.FaceFrameTopRailWidth", 1.7500)
  WallDim.FaceFrameTopReveal                = RegistryRead:GetDouble("WallDim.FaceFrameTopReveal", 0.2500)
  WallDim.MaterialThickness                 = RegistryRead:GetDouble("WallDim.MaterialThickness", 0.7500)
  WallDim.ShelfEndClarence                  = RegistryRead:GetDouble("WallDim.ShelfEndClarence", 0.1800)
  WallDim.ShelfFaceFrameThickness           = RegistryRead:GetDouble("WallDim.ShelfFaceFrameThickness", 0.7500)
  WallDim.ShelfFaceFrameWidth               = RegistryRead:GetDouble("WallDim.ShelfFaceFrameWidth", 1.2500)
  WallDim.ShelfFrontClearance               = RegistryRead:GetDouble("WallDim.ShelfFrontClearance", 0.2500)
  WallDim.ShelfHoleFirstRowSpacing          = RegistryRead:GetDouble("WallDim.ShelfHoleFirstRowSpacing", 4.0000)
  WallDim.ShelfHoleLastRowSpacing           = RegistryRead:GetDouble("WallDim.ShelfHoleLastRowSpacing", 3.0000)
  WallDim.ShelfHoleSpacing                  = RegistryRead:GetDouble("WallDim.ShelfHoleSpacing", 2.0000)
  WallDim.ShelfMaterialThickness            = RegistryRead:GetDouble("WallDim.ShelfMaterialThickness", 0.7500)
  WallDim.ShelfPinHoleBack                  = RegistryRead:GetDouble("WallDim.ShelfPinHoleBack", 2.0)
  WallDim.ShelfPinHoleFront                 = RegistryRead:GetDouble("WallDim.ShelfPinHoleFront", 1.75)
  WallDim.ThicknessBack                     = RegistryRead:GetDouble("WallDim.ThicknessBack", 0.5000)
  WallQuestion.AddCenterFaceFrame           = RegistryRead:GetBool("WallQuestion.AddCenterFaceFrame", true)
  WallQuestion.AddCenterPanel               = RegistryRead:GetBool("WallQuestion.AddCenterPanel", false)
  WallQuestion.DadoBackPanelForCenterPanel  = RegistryRead:GetBool("WallQuestion.DadoBackPanelForCenterPanel", true)
  WallQuestion.DadoStyle                    = RegistryRead:GetString("WallQuestion.DadoStyle", "Through")
  WallQuestion.ShelfCount                   = RegistryRead:GetInt("WallQuestion.ShelfCount", 2.0000)
  return true
end
-- ====================================================]]
function RegistryUpdate() --  Write to Registry values
local RW = Registry(RegName)
local
RegValue = RW:SetDouble("BaseDim.CabDepth",   BaseDim.CabDepth)
RegValue = RW:SetDouble("BaseDim.CabHeight",  BaseDim.CabHeight)
RegValue = RW:SetDouble("BaseDim.CabLength",                 BaseDim.CabLength)
RegValue = RW:SetDouble("BaseDim.FaceFrameBottomRailWidth",  BaseDim.FaceFrameBottomRailWidth)
RegValue = RW:SetDouble("BaseDim.FaceFrameBottomReveal",     BaseDim.FaceFrameBottomReveal)
RegValue = RW:SetDouble("BaseDim.FaceFrameCenterStileWidth", BaseDim.FaceFrameCenterStileWidth)
RegValue = RW:SetDouble("BaseDim.FaceFrameDrawerHeight1", BaseDim.FaceFrameDrawerHeight1)
RegValue = RW:SetDouble("BaseDim.FaceFrameDrawerHeight2", BaseDim.FaceFrameDrawerHeight2)
RegValue = RW:SetDouble("BaseDim.FaceFrameDrawerHeight3", BaseDim.FaceFrameDrawerHeight3)
RegValue = RW:SetDouble("BaseDim.FaceFrameMidRailWidth", BaseDim.FaceFrameMidRailWidth)
RegValue = RW:SetDouble("BaseDim.FaceFrameSideReveal", BaseDim.FaceFrameSideReveal)
RegValue = RW:SetDouble("BaseDim.FaceFrameStileWidth", BaseDim.FaceFrameStileWidth)
RegValue = RW:SetDouble("BaseDim.FaceFrameThickness", BaseDim.FaceFrameThickness)
RegValue = RW:SetDouble("BaseDim.FaceFrameTopOverlap",  BaseDim.FaceFrameTopOverlap)
RegValue = RW:SetDouble("BaseDim.FaceFrameTopRailWidth",  BaseDim.FaceFrameTopRailWidth)
RegValue = RW:SetDouble("BaseDim.MaterialThickness",  BaseDim.MaterialThickness)
RegValue = RW:SetDouble("BaseDim.ShelfEndClarence",  BaseDim.ShelfEndClarence)
RegValue = RW:SetDouble("BaseDim.ShelfFaceFrameThickness",  BaseDim.ShelfFaceFrameThickness)
RegValue = RW:SetDouble("BaseDim.ShelfFaceFrameWidth",  BaseDim.ShelfFaceFrameWidth)
RegValue = RW:SetDouble("BaseDim.ShelfFrontClearance",  BaseDim.ShelfFrontClearance)
RegValue = RW:SetDouble("BaseDim.ShelfHoleFirstRowSpacing",  BaseDim.ShelfHoleFirstRowSpacing)
RegValue = RW:SetDouble("BaseDim.ShelfHoleLastRowSpacing",  BaseDim.ShelfHoleLastRowSpacing)
RegValue = RW:SetDouble("BaseDim.ShelfHoleSpacing",  BaseDim.ShelfHoleSpacing)
RegValue = RW:SetDouble("BaseDim.ShelfMaterialThickness",  BaseDim.ShelfMaterialThickness)
RegValue = RW:SetDouble("BaseDim.ShelfPinHoleBack",  BaseDim.ShelfPinHoleBack)
RegValue = RW:SetDouble("BaseDim.ShelfPinHoleFront",  BaseDim.ShelfPinHoleFront)
RegValue = RW:SetDouble("BaseDim.StretcherThickness",  BaseDim.StretcherThickness)
RegValue = RW:SetDouble("BaseDim.StretcherWidth",  BaseDim.StretcherWidth)
RegValue = RW:SetDouble("BaseDim.ThicknessBack",  BaseDim.ThicknessBack)
RegValue = RW:SetDouble("BaseDim.ToeKickBottomOffsetHeight",  BaseDim.ToeKickBottomOffsetHeight)
RegValue = RW:SetDouble("BaseDim.ToeKickCoverHeight",   BaseDim.ToeKickCoverHeight)
RegValue = RW:SetDouble("BaseDim.ToeKickDepth",  BaseDim.ToeKickDepth)
RegValue = RW:SetDouble("BaseDim.ToeKickHeight",  BaseDim.ToeKickHeight)
RegValue = RW:SetDouble("BaseDim.TopFrameWidth",  BaseDim.TopFrameWidth)
RegValue = RW:SetInt("BaseQuestion.DrawerRowCount",  BaseQuestion.DrawerRowCount)
RegValue = RW:SetInt("BaseQuestion.ShelfCount",  BaseQuestion.ShelfCount)
RegValue = RW:SetString("BaseQuestion.DadoStyle",  BaseQuestion.DadoStyle)
RegValue = RW:SetBool("BaseQuestion.AddCenterFaceFrame",  BaseQuestion.AddCenterFaceFrame)
RegValue = RW:SetBool("BaseQuestion.AddCenterPanel",  BaseQuestion.AddCenterPanel)
RegValue = RW:SetDouble("Milling.DadoClearance",  Milling.DadoClearance)
RegValue = RW:SetDouble("Milling.DadoHeight",  Milling.DadoHeight)
RegValue = RW:SetDouble("Milling.PartGap",  Milling.PartGap)
RegValue = RW:SetDouble("Milling.ProfileToolDia",  Milling.ProfileToolDia)
RegValue = RW:SetDouble("Milling.ProfileToolRadius",  Milling.ProfileToolRadius)
RegValue = RW:SetDouble("Milling.RabbitClearance",  Milling.RabbitClearance)
RegValue = RW:SetDouble("Milling.ShelfPinDiameter",  Milling.ShelfPinDiameter)
RegValue = RW:SetDouble("Milling.ShelfPinLen",  Milling.ShelfPinLen)
RegValue = RW:SetDouble("Milling.ShelfPinRadius",  Milling.ShelfPinRadius)
RegValue = RW:SetDouble("WallDim.BackPanelLength",  WallDim.BackPanelLength)
RegValue = RW:SetDouble("WallDim.BackPanelWidth",  WallDim.BackPanelWidth)
RegValue = RW:SetDouble("WallDim.CabDepth",  WallDim.CabDepth)
RegValue = RW:SetDouble("WallDim.CabHeight",  WallDim.CabHeight)
RegValue = RW:SetDouble("WallDim.CabLength",  WallDim.CabLength)
RegValue = RW:SetDouble("WallDim.CenterPanelLength",  WallDim.CenterPanelLength)
RegValue = RW:SetDouble("WallDim.CenterPanelWidth",  WallDim.CenterPanelWidth)
RegValue = RW:SetDouble("WallDim.FaceFrameBottomRailWidth",  WallDim.FaceFrameBottomRailWidth)
RegValue = RW:SetDouble("WallDim.FaceFrameBottomReveal",  WallDim.FaceFrameBottomReveal)
RegValue = RW:SetDouble("WallDim.FaceFrameCenterStileWidth",  WallDim.FaceFrameCenterStileWidth)
RegValue = RW:SetDouble("WallDim.FaceFrameRailLength",  WallDim.FaceFrameRailLength)
RegValue = RW:SetDouble("WallDim.FaceFrameSideReveal",  WallDim.FaceFrameSideReveal)
RegValue = RW:SetDouble("WallDim.FaceFrameStileLength",  WallDim.FaceFrameStileLength)
RegValue = RW:SetDouble("WallDim.FaceFrameStileWidth",  WallDim.FaceFrameStileWidth)
RegValue = RW:SetDouble("WallDim.FaceFrameThickness",  WallDim.FaceFrameThickness)
RegValue = RW:SetDouble("WallDim.FaceFrameTopOverlap",  WallDim.FaceFrameTopOverlap)
RegValue = RW:SetDouble("WallDim.FaceFrameTopRailWidth",  WallDim.FaceFrameTopRailWidth)
RegValue = RW:SetDouble("WallDim.FaceFrameTopReveal",  WallDim.FaceFrameTopReveal)
RegValue = RW:SetDouble("WallDim.MaterialThickness",  WallDim.MaterialThickness)
RegValue = RW:SetDouble("WallDim.ShelfEndClarence",  WallDim.ShelfEndClarence)
RegValue = RW:SetDouble("WallDim.ShelfFaceFrameThickness",  WallDim.ShelfFaceFrameThickness)
RegValue = RW:SetDouble("WallDim.ShelfFaceFrameWidth",  WallDim.ShelfFaceFrameWidth)
RegValue = RW:SetDouble("WallDim.ShelfFrontClearance",  WallDim.ShelfFrontClearance)
RegValue = RW:SetDouble("WallDim.ShelfHoleFirstRowSpacing",  WallDim.ShelfHoleFirstRowSpacing)
RegValue = RW:SetDouble("WallDim.ShelfHoleLastRowSpacing",  WallDim.ShelfHoleLastRowSpacing)
RegValue = RW:SetDouble("WallDim.ShelfHoleSpacing",  WallDim.ShelfHoleSpacing)
RegValue = RW:SetDouble("WallDim.ShelfLength",  WallDim.ShelfLength)
RegValue = RW:SetDouble("WallDim.ShelfMaterialThickness",  WallDim.ShelfMaterialThickness)
RegValue = RW:SetDouble("WallDim.ShelfNoseLength",  WallDim.ShelfNoseLength)
RegValue = RW:SetDouble("WallDim.ShelfPinHoleBack",  WallDim.ShelfPinHoleBack)
RegValue = RW:SetDouble("WallDim.ShelfPinHoleFront",  WallDim.ShelfPinHoleFront)
RegValue = RW:SetDouble("WallDim.ShelfWidth",  WallDim.ShelfWidth)
RegValue = RW:SetDouble("WallDim.SidePanelLength",  WallDim.SidePanelLength)
RegValue = RW:SetDouble("WallDim.SidePanelWidth",  WallDim.SidePanelWidth)
RegValue = RW:SetDouble("WallDim.ThicknessBack",  WallDim.ThicknessBack)
RegValue = RW:SetDouble("WallDim.TopBottomPanelLength",  WallDim.TopBottomPanelLength)
RegValue = RW:SetDouble("WallDim.TopBottomPanelWidth",  WallDim.TopBottomPanelWidth)
RegValue = RW:SetInt("WallQuestion.ShelfCount",  WallQuestion.ShelfCount)
RegValue = RW:SetString("WallQuestion.DadoStyle",            WallQuestion.DadoStyle)
RegValue = RW:SetBool("WallQuestion.AddCenterFaceFrame",  WallQuestion.AddCenterFaceFrame)
RegValue = RW:SetBool("WallQuestion.AddCenterPanel",  WallQuestion.AddCenterPanel)
RegValue = RW:SetBool("WallQuestion.DadoBackPanelForCenterPanel",  WallQuestion.DadoBackPanelForCenterPanel)
RegValue = RW:SetString("DialogWindow.AboutXY",  DialogWindow.AboutXY)
RegValue = RW:SetString("DialogWindow.InquiryWallOrBaseXY",  DialogWindow.InquiryWallOrBaseXY)
RegValue = RW:SetString("DialogWindow.LayerXY",  DialogWindow.LayerXY)
RegValue = RW:SetString("DialogWindow.MillingXY",  DialogWindow.MillingXY)
RegValue = RW:SetString("DialogWindow.ProjectXY",  DialogWindow.ProjectXY)
RegValue = RW:SetString("DialogWindow.WallCabinetXY",  DialogWindow.WallCabinetXY)
RegValue = RW:SetString("DialogWindow.BaseCabinetXY",        DialogWindow.BaseCabinetXY)
RegValue = RW:SetString("Milling.LNBackPocket",  Milling.LNBackPocket)
RegValue = RW:SetString("Milling.LNBackProfile",  Milling.LNBackProfile)
RegValue = RW:SetString("Milling.LNCenterPanelProfile",  Milling.LNCenterPanelProfile)
RegValue = RW:SetString("Milling.LNCenterPanelShelfPinDrill",  Milling.LNCenterPanelShelfPinDrill)
RegValue = RW:SetString("Milling.LNDrawFaceFrame",  Milling.LNDrawFaceFrame)
RegValue = RW:SetString("Milling.LNDrawNotes",  Milling.LNDrawNotes)
RegValue = RW:SetString("Milling.LNPartLabels",  Milling.LNPartLabels)
RegValue = RW:SetString("Milling.LNShelfProfile",  Milling.LNShelfProfile)
RegValue = RW:SetString("Milling.LNSidePocket",  Milling.LNSidePocket)
RegValue = RW:SetString("Milling.LNSideProfile",  Milling.LNSideProfile)
RegValue = RW:SetString("Milling.LNSideShelfPinDrill",  Milling.LNSideShelfPinDrill)
RegValue = RW:SetString("Milling.LNStretcherRailProfile",  Milling.LNStretcherRailProfile)
RegValue = RW:SetString("Milling.LNTopBottomPocket",  Milling.LNTopBottomPocket)
RegValue = RW:SetString("Milling.LNTopBottomProfile",  Milling.LNTopBottomProfile)
RegValue = RW:SetString("Milling.LNBackPocketColor",                Milling.LNBackPocketColor)
RegValue = RW:SetString("Milling.LNBackProfileColor",               Milling.LNBackProfileColor)
RegValue = RW:SetString("Milling.LNCenterPanelProfileColor",        Milling.LNCenterPanelProfileColor)
RegValue = RW:SetString("Milling.LNCenterPanelShelfPinDrillColor",  Milling.LNCenterPanelShelfPinDrillColor)
RegValue = RW:SetString("Milling.LNDrawFaceFrameColor",             Milling.LNDrawFaceFrameColor)
RegValue = RW:SetString("Milling.LNDrawNotesColor",                 Milling.LNDrawNotesColor)
RegValue = RW:SetString("Milling.LNPartLabelsColor",                Milling.LNPartLabelsColor)
RegValue = RW:SetString("Milling.LNShelfProfileColor",              Milling.LNShelfProfileColor)
RegValue = RW:SetString("Milling.LNSidePocketColor",                Milling.LNSidePocketColor)
RegValue = RW:SetString("Milling.LNSideProfileColor",               Milling.LNSideProfileColor)
RegValue = RW:SetString("Milling.LNSideShelfPinDrillColor",         Milling.LNSideShelfPinDrillColor)
RegValue = RW:SetString("Milling.LNStretcherRailProfileColor",      Milling.LNStretcherRailProfileColor)
RegValue = RW:SetString("Milling.LNTopBottomPocketColor",           Milling.LNTopBottomPocketColor)
RegValue = RW:SetString("Milling.LNTopBottomProfileColor",          Milling.LNTopBottomProfileColor)
RegValue = RW:SetString("Project.CabinetName",                      Project.CabinetName)
RegValue = RW:SetString("Project.Drawing",                          Project.Drawing )
RegValue = RW:SetString("Project.ProgramCodeBy",                    Project.ProgramCodeBy)
RegValue = RW:SetString("Project.ProgramName",                      Project.ProgramName)
RegValue = RW:SetString("Project.ProgramVersion",                   Project.ProgramVersion)
RegValue = RW:SetString("Project.ProgramYear",                      Project.ProgramYear)
RegValue = RW:SetString("Project.ProjectContactEmail",              Project.ProjectContactEmail)
RegValue = RW:SetString("Project.ProjectContactName",               Project.ProjectContactName)
RegValue = RW:SetString("Project.ProjectContactPhoneNumber",        Project.ProjectContactPhoneNumber)
RegValue = RW:SetString("Project.ProjectName",                      Project.ProjectName)
RegValue = RW:SetString("Project.ProjectName",                      Project.ProjectName)
RegValue = RW:SetString("Project.ProjectPath",                      Project.ProjectPath)
end
-- ====================================================]]
function CutListfileWriterHeader(Cab)
  local file = io.open(Project.ProjectPath .. "\\" .. Project.CabinetName .. "-".. Project.DrawerID.. ".dat", "w")
  file:write("=============================================================================================== \n")
  file:write("====================================  Cabinet Cut-list  ======================================= \n")
  file:write("  Run Date = ".. StartDate() .."\n")
  file:write("  Cabinet Style = ".. Project.ProgramName .."\n")
  file:write("=============================================================================================== \n")
  if Cab == "BOTH" then
    file:write("  Base Cabinet size\n")
    file:write("  Cabinet Height = ".. BaseDim.CabHeight .."\n")
    file:write("  Cabinet Length = ".. BaseDim.CabLength .."\n")
    file:write("  Cabinet Depth  = ".. BaseDim.CabDepth .."\n")
    file:write("  Face Frame Diagonal = ".. math.sqrt ((BaseDim.CabHeight * BaseDim.CabHeight)+ (BaseDim.CabLength * BaseDim.CabLength)) .."\n")
    file:write("=============================================================================================== \n")
    file:write("  Wall Cabinet size\n")
    file:write("  Cabinet Height = ".. WallDim.CabHeight .."\n")
    file:write("  Cabinet Length = ".. WallDim.CabLength .."\n")
    file:write("  Cabinet Depth  = ".. WallDim.CabDepth .."\n")
    file:write("  Face Frame Diagonal = ".. math.sqrt ((WallDim.CabHeight * WallDim.CabHeight)+ (WallDim.CabLength * WallDim.CabLength)) .."\n")
  elseif Cab == "WALL" then
    file:write("  Wall Cabinet size\n")
    file:write("  Cabinet Height = ".. WallDim.CabHeight .."\n")
    file:write("  Cabinet Length = ".. WallDim.CabLength .."\n")
    file:write("  Cabinet Depth  = ".. WallDim.CabDepth .."\n")
    file:write("  Face Frame Diagonal = ".. math.sqrt ((WallDim.CabHeight * WallDim.CabHeight)+ (WallDim.CabLength * WallDim.CabLength)) .."\n")
  else
    file:write("  Base Cabinet size\n")
    file:write("  Cabinet Height = ".. BaseDim.CabHeight .."\n")
    file:write("  Cabinet Length = ".. BaseDim.CabLength .."\n")
    file:write("  Cabinet Depth  = ".. BaseDim.CabDepth .."\n")
    file:write("  Face Frame Diagonal = ".. math.sqrt ((BaseDim.CabHeight * BaseDim.CabHeight)+ (BaseDim.CabLength * BaseDim.CabLength)) .."\n")
  end -- if Both
  file:write("=============================================================================================== \n")
  file:write(" ID  | Part Name                       |Count| Thickness | Material        | Width   | Length\n")
  file:write("=============================================================================================== \n")
  file:close()
  file = io.open(Project.ProjectPath .. "\\" .. Project.CabinetName .."-".. Project.DrawerID..  ".csv", "w")
  file:write("ID, Name, Count, Thick, Material, Width, Length\n")
  file:close()
end
-- ====================================================]]
function CutListfileWriterItem(ID, Name, Count, Thick, Material, Width, Length)
  local file = io.open(Project.ProjectPath .. "\\" .. Project.CabinetName .. "-".. Project.DrawerID.. ".dat", "a")
  local sID = " " .. ID .. " "
  local sName     = string.sub("| ".. Name .. "                                     ",1, 34)
  local sCount    = string.sub("| ".. Count .."                                     ",1, 6)
  local sThick    = string.sub("| ".. Thick .."                                     ",1, 12)
  local sMaterial = string.sub("| ".. Material .."                                  ",1, 18)
  local sWidth    = string.sub("| ".. Width .."                                     ",1, 10)
  local sLength   = string.sub("| ".. Length .."                                    ",1, 9)
  file:write(sID .. sName .. sCount .. sThick .. sMaterial .. sWidth .. sLength .. "\n")
  file:close()
  file = io.open(Project.ProjectPath .. "\\" .. Project.CabinetName ..  "-".. Project.DrawerID.. ".csv", "a")
  file:write(ID .. "," .. Name .. "," .. Count .. "," .. Thick .. "," .. Material .. "," .. Width .. "," .. Length  .. "  \n")
  file:close()
end
-- ====================================================]]
function CutListfileWriterFooter()
  local file = io.open(Project.ProjectPath .. "\\" .. Project.CabinetName .. "-".. Project.DrawerID.. ".dat", "a")
  file:write("=============================================================================================== \n")
  file:write("EOF \n")
  file:close()
  file = io.open(Project.ProjectPath .. "\\" .. Project.CabinetName ..  "-".. Project.DrawerID.. ".csv", "a")
  file:write("\n")
  file:write("\n")file:write("\n")
  file:write("\n")
  file:write("\n")
  file:write("\n")
  file:write("\n")
  file:write("[SETTINGS]\n")
  file:close()
end
-- =================== End ============================]]